<#
.SYNOPSIS
     Remove Incorrect Proxy Addresses

.DESCRIPTION
     Script will execute and remove proxy addresses not specified in the $Allowed variable from user objects.
	 
.Inputs

.Outputs
     N/A

.Link

.NOTES
     Generated On:  04/12/2018
     Last Modified: 04/12/2018
     Generated By: Edward Martin (EM)

     ==============================
     Start Changelog
     ==============================
     V1.0.0 EM
     -    Created initial script
     
     ==============================
     End Changelog
     ==============================
#>

####################################################
## Enter Log File Output Location in $LogFilePath ##
####################################################

$LogFilePath = ""

################################################################################
## Enter the required OU's below, the last entry should not have a trailing , ##
################################################################################

$ADOUs = @('')

###################################
## Specify Allowed Domains Below ##
###################################

$Allowed = @('')

##########################################################
## Script Actions Below. Do not modify below this line. ##
##########################################################

Function Add-LogEntry
{
     Param([ValidateSet("Error", "Info", "Warning")][String]$LogLevel,[String]$LogEntry)
     $UTCTime = Get-Date ((Get-Date).ToUniversalTime()) -Format "HH:mm"
     $LocalTime = Get-Date -Format "HH:mm"
     If ((New-TimeSpan -Start $UTCTime -End $LocalTime) -GT 0)
     {
           $UTCTimeDifferencePosNeg = "+"
     }
     $UTCTimeDifferenceHours = (New-TimeSpan -Start $UTCTime -End $LocalTime).Hours.ToString("00")
     $UTCTimeDifferenceMinutes = ((New-TimeSpan -Start $UTCTime -End $LocalTime).Minutes.ToString("`:00")).Replace("-","")
     $UTCTimeDifferenceHoursMinutes = "$UTCTimeDifferencePosNeg$UTCTimeDifferenceHours$UTCTimeDifferenceMinutes"
     $LogEntryDateTime = "D" + (Get-Date -Format s)
     "UTC$UTCTimeDifferenceHoursMinutes$LogEntryDateTime - $LogLevel - $LogEntry" | Out-File -FilePath $Logfile -append
}

Import-Module ActiveDirectory

$LogFile = "$($LogFilePath)\$(Get-Date -UFormat "%Y%m%d").txt"

ForEach ($ADOU in $ADOUs) {
	$Users += Get-ADUser -SearchBase $ADOU -Filter * -Properties * | Where-Object {$_.Enabled -eq $True}
	}

Add-LogEntry -LogLevel Info -LogEntry "##########################################"
Add-LogEntry -LogLevel Info -LogEntry "############ Log File Start ##############"
Add-LogEntry -LogLevel Info -LogEntry "##########################################"	
Add-LogEntry -LogLevel Info -LogEntry "Found - $($Users.count) Users"

$BadAddress = @()
$PrimaryBadAddress = 0

ForEach ($User in $Users) {
	$ProxyAddresses = ($User).ProxyAddresses

	ForEach ($ProxyAddress in $ProxyAddresses) {
		If($ProxyAddress.StartsWith('smtp:')) {
			If(!($Allowed -match $ProxyAddress.Split("@")[1])) {
				Set-ADUser $User -Remove @{ProxyAddresses="$ProxyAddress"}
				Add-LogEntry -LogLevel Info -LogEntry "Removed - $($User.SamAccountName) - $ProxyAddress"
				If(!($BadAddress -contains $User.SamAccountName)) {
					$BadAddress += $User.SamAccountName
					}
				}
			}
		ElseIf($ProxyAddress.StartsWith('SMTP:')) {
			If(!($Allowed -match $ProxyAddress.Split("@")[1])) {
				$PrimaryBadAddress++
				Add-LogEntry -LogLevel Warning -LogEntry "Primary SMTP - $($User.SamAccountName) - $ProxyAddress"
				If(!($BadAddress -contains $User.SamAccountName)) {
					$BadAddress += $User.SamAccountName
					}
				}
			}
		}
	}

Add-LogEntry -LogLevel Info -LogEntry "Total - Proxy Address Removed - $($BadAddress.count) Users"
Add-LogEntry -LogLevel Info -LogEntry "Total - Proxy Address Primary SMTP - $PrimaryBadAddress Users"
Add-LogEntry -LogLevel Info -LogEntry "##########################################"
Add-LogEntry -LogLevel Info -LogEntry "############## Log File End ##############"
Add-LogEntry -LogLevel Info -LogEntry "##########################################"
